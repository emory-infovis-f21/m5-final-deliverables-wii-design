{"ast":null,"code":"var _jsxFileName = \"/home/Panda21/Documents/Emory/2021 - 2022/CS 485/m4-search/m4-status-update-wii-design/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport * as d3 from 'd3';\nimport Scatterplot from './scatterplot';\nimport './Search.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchSelect(props) {\n  _s();\n\n  let [selected, setGame] = useState('');\n  const [name, setName] = useState('');\n  const [data, setData] = useState([]);\n\n  const handleChange = e => {\n    console.log(\"Game Selected: \" + e.target.value);\n    setGame(e.target.value);\n  };\n\n  useEffect(() => {\n    d3.csv(\"/data/clean_data.csv\").then(da => {\n      setData(da);\n    });\n  }, []);\n  const [short, setShort] = useState(data);\n  const [dataSet, setDataSet] = useState(data);\n  const [foundGames, setFoundGames] = useState(data);\n\n  const filter = e => {\n    const keyword = e.target.value;\n\n    if (keyword !== '') {\n      const results = data.filter(game => {\n        return game.Title.toLowerCase().startsWith(keyword.toLowerCase());\n      });\n      setFoundGames(results);\n\n      if (foundGames.length > 0) {\n        setShort(foundGames.slice(0, 10));\n      }\n    } else {\n      setFoundGames(data);\n\n      if (foundGames.length > 0) {\n        setShort(foundGames.slice(0, 10));\n      }\n    }\n\n    setName(keyword);\n  };\n\n  useEffect(() => {\n    d3.csv(\"/data/clean_data.csv\").then(da => {\n      if (da[selected]) {\n        console.log(da[selected]);\n        const columns = da.columns;\n        const list = da.map(function (element) {\n          let count = 0;\n          columns.forEach(col => {\n            if (element[col] === da[selected][col] && element[col]) {\n              count += 1;\n            }\n          });\n          return {\n            row: element,\n            value: count\n          };\n        });\n        list.sort((a, b) => a.value < b.value);\n        setDataSet(list.slice(0, 100));\n        console.log(dataSet);\n        return dataSet;\n      }\n    });\n  }, [selected]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        value: name,\n        onChange: filter,\n        className: \"input\",\n        placeholder: \"\\uF002 Search for a Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-list\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selected,\n          onChange: handleChange,\n          className: \"game-dropdown\",\n          children: short && short.length > 0 ? short.map(game => /*#__PURE__*/_jsxDEV(\"option\", {\n            className: \"game\",\n            value: game.id,\n            children: [game.Title, \", \", game.Platform, \", \", game.Year]\n          }, game.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)) : /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"No results Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), dataSet && dataSet.length > 0 ? /*#__PURE__*/_jsxDEV(Scatterplot, {\n      dataSet: dataSet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select a Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 10\n  }, this);\n}\n\n_s(SearchSelect, \"1a6shl+KzS1wn5qwOqtDdOMzL5g=\");\n\n_c = SearchSelect;\nexport default SearchSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchSelect\");","map":{"version":3,"sources":["/home/Panda21/Documents/Emory/2021 - 2022/CS 485/m4-search/m4-status-update-wii-design/src/components/Search.js"],"names":["React","useEffect","useState","d3","Scatterplot","SearchSelect","props","selected","setGame","name","setName","data","setData","handleChange","e","console","log","target","value","csv","then","da","short","setShort","dataSet","setDataSet","foundGames","setFoundGames","filter","keyword","results","game","Title","toLowerCase","startsWith","length","slice","columns","list","map","element","count","forEach","col","row","sort","a","b","id","Platform","Year"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport * as d3 from 'd3';\nimport Scatterplot from './scatterplot';\nimport './Search.css'\nimport 'font-awesome/css/font-awesome.min.css';\n\n\n    function SearchSelect(props) {\n         \n         let [selected, setGame] = useState(''); \n         const [name, setName] = useState('');\n         const [data, setData] = useState([]);\n\n         const handleChange = (e) => {\n            console.log(\"Game Selected: \" + e.target.value);\n            setGame(e.target.value);\n         };\n\n         useEffect(()=> {\n            d3.csv(\"/data/clean_data.csv\")\n               .then((da) =>{\n                  setData(da);\n               })\n         }, []);\n         const [short, setShort] = useState(data);\n         const [dataSet, setDataSet] = useState(data);\n         const [foundGames, setFoundGames] = useState(data)\n\n         \n         const filter = (e) => {\n            const keyword = e.target.value;\n            if(keyword !== ''){\n               const results = data.filter((game) =>{\n                  return game.Title.toLowerCase().startsWith(keyword.toLowerCase());\n               });\n               setFoundGames(results);\n               if(foundGames.length > 0){\n                  setShort(foundGames.slice(0,10));\n               }\n            }else{\n               setFoundGames(data);\n               if(foundGames.length > 0){\n                  setShort(foundGames.slice(0,10));\n               }\n            }\n            setName(keyword);\n         };\n \n         useEffect(() => {\n            d3.csv(\"/data/clean_data.csv\")\n               .then((da) => {\n                  if(da[selected]){\n                     console.log(da[selected]);\n                  const columns = da.columns;\n                  const list = da.map(function(element){\n                     let count = 0;\n                     columns.forEach(col =>{\n                        if(element[col] === da[selected][col] && element[col]){\n                           count += 1;\n                        }\n                     })\n                     return{\n                        row: element,\n                        value: count\n                     }\n                  })\n                  list.sort((a,b)=>\n                     a.value < b.value\n                  )\n                  setDataSet(list.slice(0, 100));\n                  console.log(dataSet)\n                  return dataSet;\n                  }\n               })\n         },[selected]);\n\n         return (\n         <React.Fragment>\n            <div className=\"container\">\n               <input\n                  type=\"search\"\n                  value={name}\n                  onChange={filter}\n                  className=\"input\"\n                  placeholder=\"&#xf002; Search for a Game\"\n               />\n               <div className=\"game-list\">\n                  <select value={selected} onChange={handleChange} className=\"game-dropdown\">\n                  {short && short.length > 0 ?(\n                     short.map((game) => (\n                        <option key={game.id} className=\"game\" value={game.id}>\n                           {game.Title}\n                           , {game.Platform}\n                           , {game.Year}\n                        </option>\n                     ))\n                  ):(\n                     <h1>No results Found</h1>\n                  )}\n                  </select>\n               </div>\n            </div>\n            {dataSet && dataSet.length > 0 ?(\n            <Scatterplot dataSet={dataSet}></Scatterplot>\n            ):(\n               <h1>Select a Game</h1>\n            )}\n         </React.Fragment>\n      );\n   }\n\nexport default SearchSelect;"]},"metadata":{},"sourceType":"module"}