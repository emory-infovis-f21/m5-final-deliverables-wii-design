{"version":3,"sources":["components/Navbar.js","components/scatterplot.js","components/Search.js","components/pages/Home.js","components/pages/About.js","App.js","index.js"],"names":["Navbar","className","to","Scatterplot","dataSet","svgRef","useRef","useState","data","setData","list","Array","cat","num","col","optX","value","label","optY","optColor","useEffect","d3","then","da","list1","map","game","row","remove","selectAll","current","labelX","labelY","color","domain","d","range","w","h","svg","attr","style","append","join","text","yScale","xScale","legend","legendColor","shapeWidth","shapeHeight","scale","call","zoom","on","e","newY","transform","rescaleY","newX","rescaleX","xAxis","yAxis","circle","tooldiv","currentTarget","pageY","pageX","push","tbody","cell","columns","column","enter","selectedOpt","this","property","target","selectedOptions","getAttribute","selectedGroup","console","log","newXScale","newYScale","transition","duration","updateX","updateY","updateColor","table","thead","Fragment","display","margin","id","overflow","height","width","ref","align","padding","SearchSelect","props","selected","setGame","name","setName","short","setShort","setDataSet","foundGames","setFoundGames","element","count","forEach","sort","a","b","slice","type","onChange","keyword","placeholder","Title","Platform","Year","results","filter","toLowerCase","startsWith","length","li","splice","Home","About","href","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54379c33.chunk.js","sourcesContent":["import {React} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar(){\r\n    return (\r\n        <div className = \"navbar\">\r\n            <div className='header'><h3>Wii Recommend</h3></div>\r\n            <ul className='menu'>\r\n                <li><Link to='/'>HOME</Link></li>\r\n                <li><Link to='/about'>ABOUT</Link></li>\r\n            </ul> \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React, {useRef, useEffect, useState} from \"react\";\nimport * as d3 from 'd3';\nimport {legendColor }from \"d3-svg-legend\";\nimport './scatterplot.css'\n\n\nconst Scatterplot = (dataSet) => {\n\n    const svgRef = useRef();\n    const [data, setData] = useState([]);\n    const list = new Array();\n    const cat = useRef('Critic Score');\n    const num = useRef('North America Sales')\n    const col = useRef('Genres')\n\n    const optX = [\n        {value: 'Critic Score', label: 'Critic Score'},\n        {value: 'User Score', label: 'User Score'},\n        {value: 'Global Sales', label: 'Global Sales'},\n        {value: 'North America Sales', label: 'North America Sales'},\n        {value: 'Average Play Length_All PlayStyles', label: 'Average All Playstyles Play Time'},\n        {value: 'Average Play Length_Leisure', label: 'Average Leisure Play Time'}\n    ]\n\n    const optY = [\n        {value: 'North America Sales', label: 'North America Sales'},\n        {value: 'Average Play Length_All PlayStyles', label: 'Average All Playstyles Play Time'},\n        {value: 'Average Play Length_Leisure', label: 'Average Leisure Play Time'},\n        {value: 'Critic Score', label: 'Critic Score'},\n        {value: 'User Score', label: 'User Score'},\n        {value: 'Global Sales', label: 'Global Sales'}\n    ]\n\n    const optColor = [\n        {value: 'Genres', label: 'Genres'},\n        {value: 'Platform', label:'Platform'},\n        {value: 'Developer', label:'Developer'},\n        {value: 'Rating', label: 'Rating'}\n    ]\n\n    const selectionStyle = {\n        display: 'flex',\n        margin: '20px'\n    }\n\n    const chartStyle = {\n        overflow: 'auto',\n        height: '500px',\n        width: '800px',\n        display:'flex',\n    }\n    const tableStyle = {\n        align: 'center',\n        display: 'flex',\n        padding: '20px',\n        margin: '20px'\n     }\n\n    useEffect(()=> {\n        d3.csv(\"/data/clean_data.csv\")\n            .then((da) =>{\n                var list1 = dataSet.dataSet.map((game)=>{\n                    return game.row;\n                })\n                setData(list1);\n        })\n    }, [dataSet.dataSet]);\n\n    useEffect(() => {\n\n        d3.selectAll('circle').remove()\n        d3.selectAll('#legendArea').remove()\n        d3.selectAll('text').remove()\n        d3.selectAll('text').remove()\n        d3.select('#x-cat').selectAll('option').remove()\n        d3.select('#y-cat').selectAll('option').remove()\n        d3.select('#color-cat').selectAll('option').remove()\n\n        cat.current = 'Critic Score';\n        num.current = 'North America Sales'\n        col.current = 'Genres'\n\n        let labelX = '';\n        let labelY = '';\n        //set up color\n        const color = d3.scaleOrdinal()\n            .domain(data.map(function(d) {return d[col.current]}))\n            .range(d3.schemeCategory10)\n\n        //set up container\n        const w = 800;\n        const h = 400;\n        const margin = {top:20, right:20, bottom:30, left:40};\n        const svg = d3.select(svgRef.current)\n            .attr('width', w)\n            .attr('height', h)\n            .style('overflow', 'visible')\n            .style('margin-top', '10px')\n            .style('margin-bottom', '50px')\n            .style('position', 'absolute')\n            .style('left', '100px')\n            .append('g')\n\n        //set options\n        d3.select('#x-cat')\n            .selectAll('option')\n                .data(optX)\n            .join('option')\n            .text(function(d){return d.label})\n            .attr('value', function(d){return d.value})\n            .attr('label', function(d){return d.label})\n\n        d3.select('#y-cat')\n            .selectAll('option')\n                .data(optY)\n            .join('option')\n            .text(function(d){return d.label})\n            .attr('value', function(d){return d.value})\n            .attr('label', function(d){return d.label})\n\n        d3.select('#color-cat')\n            .selectAll('option')\n                .data(optColor)\n            .join('option')\n            .text(function(d){return d.label})\n            .attr('value', function(d){return d.value})\n            .attr('label', function(d){return d.label})\n\n            //setting scales\n            const yScale = d3.scaleLinear()\n                .domain([0, d3.max(data, function(d) {return d[num.current]})])\n                .range([h,0]);\n\n            const xScale = d3.scaleLinear()\n                .domain([0, d3.max(data,function(d) {return d[cat.current]})])\n                .range([0,w])\n\n\n            //set up legend\n            const legend = legendColor()\n                .shapeWidth(20)\n                .shapeHeight(5)\n                .scale(color)\n\n            d3.selectAll('#chartArea')\n                .append('div')\n                .attr('id','legendArea')\n                .style('height', '400px')\n                .style('width', '500px')\n                .style('position', 'absolute')\n                .style('left', '930px')\n                .style('overflow-y', 'scroll')\n                .append('svg')\n                .attr('id', 'legend')\n                .attr('height', '120vh')\n                .attr('width', '100vh')\n                .style('overflow', 'scroll')\n                .style('display', 'flex')\n                .call(legend)\n\n            //set up zoom\n            const zoom = d3.zoom()\n                .on('zoom', zoomed);\n\n            // rescaling\n            function zoomed(e) {\n                const newY = e.transform.rescaleY(yScale)\n                const newX = e.transform.rescaleX(xScale)\n\n                xAxis.call(d3.axisBottom(newX))\n                yAxis.call(d3.axisLeft(newY))\n\n                circle\n                    .selectAll('circle')\n                    .attr('cy', function(d) {return newY(d[num.current])})\n                    .attr('cx', function(d) {return newX(d[cat.current])})\n            }\n    \n        \n            //clipPath - nothing draw outside the area\n\n            svg.append('defs').append('svg:clipPath')\n                .attr(\"id\", \"clip\")\n                .append('svg:rect')\n                .attr('width', w)\n                .attr('height',h)\n                .attr('x', 0)\n                .attr('y',0)\n\n            //invisible rect on top of the chart to recover pointer events\n            svg.append('rect')\n                .attr('width', w)\n                .attr('height',h)\n                .style('fill', 'none')\n                .style('pointer-events', 'all')\n                .call(zoom)\n\n\n            //set up axes\n            const xAxis = d3.select('#x-axis')\n                .attr('transform', `translate(0, ${h})`)\n                .call(d3.axisBottom(xScale))\n            \n            const yAxis = d3.select('#y-axis')\n                //.attr('transform', `translate(0, ${w})`)\n                .call(d3.axisLeft(yScale))\n\n            //set label\n            svg.append('text')\n                .attr('id','x-label')\n                .attr('x', w/2)\n                .attr('y', h+50)\n                .text('Critic Score')\n            \n            svg.append('text')\n                .attr('id', 'y-label')\n                .attr('y', h-450)\n                .attr('x', -320)\n                .attr(\"transform\", \"rotate(270)\")\n                .text('North America Sales')\n\n            //set up tooltip\n            const tooldiv = d3.select('#chartArea')\n                .append('div')\n                .style('visibility', 'hidden')\n                .style('position', 'absolute')\n                .style('background-color', '#ccc')\n                .style('padding', '10px')\n                .style('border-radius', '5px')\n                .style('color', 'black')\n\n            //setting up data\n            const circle = svg.append('g')\n            .attr(\"clip-path\", 'url(#clip)')\n            \n            circle\n                .selectAll('circle')\n                .data(data)\n                .join('circle')\n                    .attr('cx', d => xScale(d[cat.current]))\n                    .attr('cy', d => yScale(d[num.current]))\n                    .attr('r',5)\n                    .attr('fill', d=>color(d[col.current]))\n                    .on('mouseover',(e,d) => {\n                        d3.select(e.currentTarget)\n                            .attr('r', 5*2)\n                            .attr('fill', 'orange')\n                        tooldiv.style('visibility','visible')\n                            .text(`${d['Title']}`)\n                    })\n                    .on('mousemove', (e,d)=>{\n                        tooldiv.style('top', (e.pageY-50) + 'px')\n                            .style('left', (e.pageX-50)+ 'px')\n                    })\n                    .on('mouseout', (e,d) => {\n                        d3.select(e.currentTarget)\n                            .attr('r', 5)\n                            .attr('fill', '#ff00ad')\n                        tooldiv.style('visibility','hidden')\n                    })\n                    .on('click', (e,d)=>{\n                        list.push(d)\n                        var rows = tbody.selectAll(\"tr\")\n                            .data(list)\n                            .join('tr')\n\n                        var cells = rows.selectAll('td')\n                            .data(function(cell) {\n                                return columns.map(function(game) {\n                                    return {\n                                        column: game,\n                                        value: cell[game]\n                                    }\n                                })\n                            }).enter()\n                            .append('td')\n                            .text(function(d) {\n                                return d.value;\n                            });\n                    })\n        \n        //update option\n        function updateX(selectedGroup) {\n            cat.current = selectedGroup\n            console.log(cat.current + ' ' + num.current)\n\n            const newXScale = d3.scaleLinear()\n                .domain([0, d3.max(data,function(d) {return d[cat.current]})])\n                .range([0,w])\n\n            const newYScale = d3.scaleLinear()\n                .domain([0, d3.max(data, function(d) {return d[num.current]})])\n                .range([h,0])\n\n            d3.select('#x-axis')\n                //.attr('transform', `translate(0, ${h})`)\n                .call(d3.axisBottom(newXScale))\n\n            d3.select('#y-axis')\n                //.attr('transform', `translate(0, ${w})`)\n                .call(d3.axisLeft().scale(yScale))\n\n            //set up zoom\n            const zoom = d3.zoom()\n            .on('zoom', zoomed);\n\n            function zoomed(e){\n                const newY = e.transform.rescaleY(newYScale)\n                const newX = e.transform.rescaleX(newXScale)\n\n                xAxis.call(d3.axisBottom(newX))\n                yAxis.call(d3.axisLeft(newY))\n\n                circle\n                    .selectAll('circle')\n                    .attr('cy', function(d) {return newY(d[num.current])})\n                    .attr('cx', function(d) {return newX(d[selectedGroup])})\n            }\n\n            svg.selectAll('rect')\n                .call(zoom)\n\n            circle\n                .selectAll('circle')\n                    .on('mouseover',(e,d) => {\n                        if(selectedGroup !== 'Title') {\n                            d3.select(e.currentTarget)\n                            .attr('r', 5*2)\n                            .attr('fill', 'orange')\n\n                            tooldiv.style('visibility','visible')\n                            .text(`Title: ${d['Title']}  ${labelX}: ${d[selectedGroup]} ${labelY}: ${d[num.current]}`)\n                        }\n                        else {\n                            d3.select(e.currentTarget)\n                            .attr('r', 5*2)\n                            .attr('fill', 'orange')\n\n                            tooldiv.style('visibility','visible')\n                            .text(`${d['Title']}`)\n                        }\n\n                    })\n                .transition()\n                .duration(1000)\n                .attr('fill', d=>color(d['Genres']))\n                .attr('cx', function(d){return newXScale(d[selectedGroup])})    \n                .attr('cy', function(d){return newYScale(d[num.current])})\n            \n        }\n\n        d3.select('#x-cat').on('change', function(e,d) {\n            const selectedOpt = d3.select(this).property('value')\n            labelX = e.target.selectedOptions[0].getAttribute('label')\n            d3.selectAll('#x-label').text(labelX)\n            updateX(selectedOpt);\n        })\n\n        function updateY(selectedGroup) {\n            num.current = selectedGroup\n            console.log(cat.current + ' ' + num.current)\n\n            const newXScale = d3.scaleLinear()\n                .domain([0, d3.max(data,function(d) {return d[cat.current]})])\n                .range([0,w])\n\n            const newYScale = d3.scaleLinear()\n                .domain([0, d3.max(data,function(d){return d[selectedGroup]})])\n                .range([h,0])\n\n            d3.select('#y-axis')\n                .call(d3.axisLeft(newYScale))\n\n            d3.select('#x-axis')\n                .call(d3.axisBottom(newXScale))\n\n                //set up zoom\n            const zoom = d3.zoom()\n            .on('zoom', zoomed);\n\n            function zoomed(e){\n                const newY = e.transform.rescaleY(newYScale)\n                const newX = e.transform.rescaleX(newXScale)\n\n                xAxis.call(d3.axisBottom(newX))\n                yAxis.call(d3.axisLeft(newY))\n\n                circle\n                    .selectAll('circle')\n                    .attr('cy', function(d) {return newY(d[selectedGroup])})\n                    .attr('cx', function(d) {return newX(d[cat.current])})\n            }\n\n            svg.selectAll('rect')\n                .call(zoom)\n\n            circle\n                .selectAll('circle')\n                .transition()\n                .duration(1000)\n                .attr('cy', d=> newYScale(d[selectedGroup]))\n                .attr('cx', function(d){return newXScale(d[cat.current])})\n                .attr('fill', d=>color(d['Genres']))\n            \n        }\n        d3.select('#y-cat').on('change', function(e,d) {\n            const selectedOpt = d3.select(this).property('value');\n            labelY = e.target.selectedOptions[0].getAttribute('label')\n            d3.selectAll('#y-label').text(labelY);\n            updateY(selectedOpt);\n        })\n        function updateColor(selectedGroup) {\n\n            col.current = selectedGroup;\n\n            const color = d3.scaleOrdinal()\n                .domain(data.map(function(d) {return d[selectedGroup]}))\n                .range(d3.schemeCategory10)\n\n                const legend = legendColor()\n                .shapeWidth(20)\n                .shapeHeight(5)\n                .scale(color)\n\n            d3.selectAll('#legendArea').remove()\n            \n            if(selectedGroup === 'Rating') {\n                d3.selectAll('#chartArea')\n                .append('div')\n                .attr('id','legendArea')\n                .style('height', '400px')\n                .style('width', '500px')\n                .style('position', 'absolute')\n                .style('left', '930px')\n                .style('overflow-y', 'scroll')\n                .append('svg')\n                .attr('id', 'legend')\n                .style('overflow', 'scroll')\n                .style('display', 'flex')\n                .call(legend)\n            }\n            else if (selectedGroup === 'Platform') {\n                d3.selectAll('#chartArea')\n                .append('div')\n                .attr('id','legendArea')\n                .style('height', '400px')\n                .style('width', '500px')\n                .style('position', 'absolute')\n                .style('left', '930px')\n                .style('overflow-y', 'scroll')\n                .append('svg')\n                .attr('id', 'legend')\n                .style('overflow', 'scroll')\n                .style('display', 'flex')\n                .call(legend)\n            }\n            else if(selectedGroup === 'Developer') {\n                d3.selectAll('#chartArea')\n                .append('div')\n                .attr('id','legendArea')\n                .style('height', '400px')\n                .style('width', '500px')\n                .style('position', 'absolute')\n                .style('left', '930px')\n                .style('overflow-y', 'scroll')\n                .append('svg')\n                .attr('id', 'legend')\n                .attr('height', '90vh')\n                .style('overflow', 'scroll')\n                .style('display', 'flex')\n                .call(legend)\n            }\n            else {\n            d3.selectAll('#chartArea')\n                .append('div')\n                .attr('id','legendArea')\n                .style('height', '400px')\n                .style('width', '500px')\n                .style('position', 'absolute')\n                .style('left', '930px')\n                .style('overflow-y', 'scroll')\n                .append('svg')\n                .attr('id', 'legend')\n                .attr('height', '120vh')\n                .attr('width', '100vh')\n                .style('overflow', 'scroll')\n                .style('display', 'flex')\n                .call(legend)\n            }\n\n            circle\n                .selectAll('circle')\n                .attr('fill', d => color(d[selectedGroup]))\n        }\n\n        d3.select('#color-cat').on('change', function(e,d) {\n            const selectedOpt = d3.select(this).property('value')\n            updateColor(selectedOpt);\n        })\n\n        d3.selectAll('table').remove()\n        var table = d3.select(\"#tableArea\").append(\"table\")\n        var thead = table.append(\"thead\")\n        var tbody = table.append(\"tbody\")\n\n        const columns = [\n            'Title',\n            'Year',\n            'Platform',\n            'Critic Score',\n            'User Score',\n            'Developer',\n            'Genres',\n            'Rating'\n         ]\n\n        thead.append(\"tr\")\n            .selectAll(\"th\")\n            .data(columns)\n            .join(\"th\")\n            .text(function(d) {\n                return d;\n            })\n   \n    }, [data]);\n\n    return(\n        <React.Fragment>\n            <div className='selection' style={selectionStyle}>\n                <p>Select X Value</p>\n                <select id='x-cat'>Select X Value</select>&nbsp;&nbsp;\n                <p>Select Y Value</p>\n                <select id= 'y-cat'>Select Y Value</select>&nbsp;&nbsp;\n                <p>Select Color Code</p>\n                <select id= 'color-cat'></select>\n            </div>\n            <div id = 'chartArea' style={chartStyle}>\n                <svg ref = {svgRef}>\n                    <g id ='x-axis'></g>\n                    <g id = 'y-axis'></g>\n                </svg>\n            </div>\n            <div id = 'tableArea' style={tableStyle}></div>\n\n            \n        </React.Fragment>\n    )\n}\n\nexport default Scatterplot;\n","import React, { useEffect, useState } from \"react\";\nimport * as d3 from 'd3';\nimport Scatterplot from './scatterplot';\nimport './Search.css'\nimport 'font-awesome/css/font-awesome.min.css';\n\n\n    function SearchSelect(props) {\n         \n         let [selected, setGame] = useState(''); \n         const [name, setName] = useState('');\n         const [data, setData] = useState([]);\n\n         const handleChange = (e) => {\n            console.log(\"Game Selected: \" + e.target.value);\n            setGame(e.target.value);\n         };\n\n         useEffect(()=> {\n            d3.csv(\"/data/clean_data.csv\")\n               .then((da) =>{\n                  setData(da);\n               })\n         }, []);\n         const [short, setShort] = useState(data);\n         const [dataSet, setDataSet] = useState(data);\n         const [foundGames, setFoundGames] = useState(data)\n\n         \n         const filter = (e) => {\n            const keyword = e.target.value;\n            const placeholder = {id: 999999, Title:\"Select an option\", Platform:\"\", Year:\"\"}\n            if(keyword !== ''){\n               const results = data.filter((game) =>{\n                  return game.Title.toLowerCase().startsWith(keyword.toLowerCase());\n               });\n               setFoundGames(results);\n               if(foundGames.length > 0){\n                  const li = foundGames.slice(0,10);\n                  li.splice(0,0,placeholder);\n                  setShort(li);\n               }\n            }else{\n               setFoundGames(data);\n               if(foundGames.length > 0){\n                  const li = foundGames.slice(0,10);\n                  li.splice(0,0,placeholder);\n                  setShort(li);\n               }\n            }\n            setName(keyword);\n         };\n \n         useEffect(() => {\n            d3.csv(\"/data/clean_data.csv\")\n               .then((da) => {\n                  if(da[selected]){\n                     console.log(da[selected]);\n                  const columns = da.columns;\n                  const list = da.map(function(element){\n                     let count = 0;\n                     columns.forEach(col =>{\n                        if(element[col] === da[selected][col] && element[col]){\n                           count += 1;\n                        }\n                     })\n                     return{\n                        row: element,\n                        value: count\n                     }\n                  })\n                  list.sort((a,b)=>\n                     a.value < b.value\n                  )\n                  setDataSet(list.slice(0, 100));\n                  console.log(dataSet)\n                  return dataSet;\n                  }\n               })\n         },[selected]);\n\n         return (\n         <React.Fragment>\n            <div className=\"container\">\n               <input\n                  type=\"search\"\n                  value={name}\n                  onChange={filter}\n                  className=\"input\"\n                  placeholder=\"&#xf002; Search for a Game\"\n               />\n               <div className=\"game-list\">\n                  <select value={selected} onChange={handleChange} className=\"game-dropdown\">\n                  {short && short.length > 0 ?(\n                     short.map((game) => (\n                        <option key={game.id} className=\"game\" value={game.id}>\n                           {game.Title}\n                           , {game.Platform}\n                           , {game.Year}\n                        </option>\n                     ))\n                  ):(\n                     <option></option>\n                  )}\n                  </select>\n               </div>\n            </div>\n            {dataSet && dataSet.length > 0 ?(\n            <Scatterplot dataSet={dataSet}></Scatterplot>\n            ):(\n               <h1>Select a Game</h1>\n            )}\n         </React.Fragment>\n      );\n   }\n\nexport default SearchSelect;","import React from \"react\";\nimport Search from '../Search';\n\nfunction Home() {\n    return(\n        <div id= 'container'>\n            <Search></Search>\n        </div>\n    )\n}\n\nexport default Home;","import React from \"react\";\nimport './About.css'\n\nfunction About() {\n    return(\n        <div className='about'>\n            <div className='intro'>\n                <h1>Introduction</h1>\n                <p>With the growth of the video industry and the wide choice of gaming options, it may be overwhelming for video game novices and even video game enthusiasts to find video games that they like. Utilizing datasets from Metacritic and video game sales, we developed an algorithm that allows users to search the title of their favorite video games and generate recommendations based on their most preferred features, such as genre, critic score, and sales.</p>\n            </div>\n            <div className='data'>\n                <p>Datasets from Kaggle:</p>\n                <a href='https://drive.google.com/file/d/1rxdKOFH5RDHmLZjnA4h9yimVebv-nSpt/view?usp=sharing'>video_games.csv</a><br/>\n                <a href='https://drive.google.com/file/d/1kRfRqaf8m6OPksgCFHvUftjr_h-WGeHq/view?usp=sharing'>Video_Games_Sales_as_at_22_Dec_2016.csv</a><br/>\n                <a href='https://drive.google.com/file/d/10mjBYAN7r04ktLkDDlziiIEvjIOSxvUO/view?usp=sharing'>Metacritic_games_of_all_time.csv</a><br/>\n                <p>The dataset that we integrated ourselves:</p>\n                <a href='https://drive.google.com/file/d/1xZKWRaKUQ1vyjfv-ljts-G2pWLPfspRu/view?usp=sharing'>clean_data.csv</a>\n            </div>\n        </div>\n    )\n}\n\nexport default About;","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport {Route, Routes} from 'react-router-dom';\nimport Home from './components/pages/Home';\nimport About from './components/pages/About';\n\nfunction App(){\n    return(\n      <div className=\"App\">\n        <Navbar></Navbar>\n        <Routes>\n          <Route exact path='/' element={<Home/>} />\n          <Route path='/about' element={<About/>}/>\n        </Routes>\n      </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}